<?php
/**
 * @file
 * Entity Registration registrant checkin workflow and UI for regisration.
 */

/**
 * Implements hook_menu().
 */
function registration_checkin_menu() {
  $items = array();

  // UI for checking in registrants.
  foreach (registration_get_registration_instances() as $instance) {
    $type = $instance['entity_type'];
    if (!in_array($type, array('registration', 'registration_type'))) {
      $items[$type . '/%entity_object/registrations/checkin'] = array(
        'load arguments' => array($type),
        'title' => 'Check-in',
        'page callback' => 'registration_checkin_list_page',
        'page arguments' => array(0, 1),
        'access callback' => 'registration_administer_registrations_access',
        'access arguments' => array(0, 1),
        'weight' => 15,
        'type' => MENU_LOCAL_TASK,
        'file' => 'registration_checkin.pages.inc',
      );
    }
  }

  return $items;
}

/**
 * Form builder for the checkin state AJAX form.
 *
 * @param array $form
 * @param array $form_state
 * @param Registration $registration
 *   The specific registratoin for which we are providing a select
 *   box for. Should be a fully-loaded Registration entity.
 *
 * @return array
 *   A complete form array.
 */
function registration_checkin_state_form($form, &$form_state, Registration $registration) {
  $rid = $registration->registration_id;
  $form = array();

  // Build the state options, keeping track of the current state for default value.
  $state_options = array();
  $default_state_option_value = '';
  foreach (registration_states() as $state_info) {
    $state_options[$state_info->name] = $state_info->label;
    if ($state_info->name == $registration->state) {
      $default_state_option_value = $state_info->name;
    }
  }
  $form['registration_state'] = array(
    '#type' => 'select',
    '#title' => 'Select state',
    '#title_display' => 'invisible',
    '#options' => $state_options,
    '#default_value' => $default_state_option_value,
    '#ajax' => array(
      'callback' => 'registration_checkin_state_update_callback',
    ),
  );
  $form['registration_id'] = array(
    '#type' => 'hidden',
    '#value' => $rid,
  );
  $form['#attributes']['class'][] = 'registration-state--rid' . $rid;

  return $form;
}

/**
 * AJAX submit handler for the state update selection form.
 *
 * @param Registration $registration
 *   The registration entity for which to update the registration for.
 */
function registration_checkin_state_update_callback($form, &$form_state) {
  $registration = registration_load($form_state['values']['registration_id']);
  if ($registration) {
    $registration->state = $form_state['values']['registration_state'];
    $registration->save();
  }
  else {
    watchdog('registration_checkin', 'Could not load registration (id: @id) to update state.',
      array(
        '@id' => $form['registration_id'],
      )
    );
  }
}

/**
 * Form builder for the checkin action form.
 *
 * @param array $form
 * @param array $form_state
 * @param Registration $registration
 *   The specific registratoin for which we are providing a select
 *   box for. Should be a fully-loaded Registration entity.
 *
 * @return array
 *   A complete form array.
 */
function registration_checkin_checkin_action_form($form, &$form_state, Registration $registration) {
  $form = array();

  $form['registration_id'] = array(
    '#type' => 'hidden',
    '#value' => $registration->registration_id,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#ajax' => array(
      'callback' => 'registration_checkin_checkin_action_callback',
    ),
    '#value' => t('Check-in'),
  );

  return $form;
}

/**
 * AJAX callback for checking in a specific registrant.
 */
function registration_checkin_checkin_action_callback($form, &$form_state) {
  $rid = $form_state['values']['registration_id'];
  $registration = registration_load($rid);
  if ($registration) {
    $registration->state = 'attended';
    $registration->save();

    $updated_state_form = drupal_get_form('registration_checkin_state_form', $registration);
    return array(
      '#type' => 'ajax',
      '#commands' => array(
        ajax_command_replace('.registration-state--rid' . $rid, render($updated_state_form))
      ),
    );
  }
  else {
    watchdog('registration_checkin', 'Could not load registration (id: @id) to checkin.',
      array(
        '@id' => $form['registration_id'],
      )
    );
  }
}